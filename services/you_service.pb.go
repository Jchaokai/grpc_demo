// Code generated by protoc-gen-go. DO NOT EDIT.
// source: you_service.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gender               string   `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca4fece6579ce0b, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

type Response struct {
	Res                  string   `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca4fece6579ce0b, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetRes() string {
	if m != nil {
		return m.Res
	}
	return ""
}

type QuerySize struct {
	Size                 int32    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuerySize) Reset()         { *m = QuerySize{} }
func (m *QuerySize) String() string { return proto.CompactTextString(m) }
func (*QuerySize) ProtoMessage()    {}
func (*QuerySize) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca4fece6579ce0b, []int{2}
}

func (m *QuerySize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuerySize.Unmarshal(m, b)
}
func (m *QuerySize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuerySize.Marshal(b, m, deterministic)
}
func (m *QuerySize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySize.Merge(m, src)
}
func (m *QuerySize) XXX_Size() int {
	return xxx_messageInfo_QuerySize.Size(m)
}
func (m *QuerySize) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySize.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySize proto.InternalMessageInfo

func (m *QuerySize) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ProductList struct {
	Res                  []*Response `protobuf:"bytes,1,rep,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProductList) Reset()         { *m = ProductList{} }
func (m *ProductList) String() string { return proto.CompactTextString(m) }
func (*ProductList) ProtoMessage()    {}
func (*ProductList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca4fece6579ce0b, []int{3}
}

func (m *ProductList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductList.Unmarshal(m, b)
}
func (m *ProductList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductList.Marshal(b, m, deterministic)
}
func (m *ProductList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductList.Merge(m, src)
}
func (m *ProductList) XXX_Size() int {
	return xxx_messageInfo_ProductList.Size(m)
}
func (m *ProductList) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductList.DiscardUnknown(m)
}

var xxx_messageInfo_ProductList proto.InternalMessageInfo

func (m *ProductList) GetRes() []*Response {
	if m != nil {
		return m.Res
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "services.request")
	proto.RegisterType((*Response)(nil), "services.response")
	proto.RegisterType((*QuerySize)(nil), "services.query_size")
	proto.RegisterType((*ProductList)(nil), "services.product_list")
}

func init() {
	proto.RegisterFile("you_service.proto", fileDescriptor_bca4fece6579ce0b)
}

var fileDescriptor_bca4fece6579ce0b = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x3d, 0x4f, 0x02, 0x41,
	0x14, 0x14, 0x90, 0x0f, 0x1f, 0x12, 0xe1, 0x45, 0x08, 0xb9, 0x50, 0x90, 0x8d, 0x05, 0x15, 0x9b,
	0xa0, 0x76, 0xb6, 0x16, 0x36, 0xc6, 0x60, 0xac, 0xc9, 0x09, 0x4f, 0xbc, 0xe4, 0xd8, 0x77, 0xec,
	0xee, 0x99, 0x20, 0xa1, 0xf1, 0x2f, 0xd8, 0xfb, 0xa7, 0xfc, 0x0b, 0xfe, 0x10, 0x73, 0xcb, 0x5e,
	0x8e, 0x42, 0xab, 0x9b, 0x99, 0xcc, 0xcc, 0xbd, 0xc9, 0x42, 0x67, 0xc3, 0xe9, 0xcc, 0x90, 0x7e,
	0x8b, 0xe6, 0x34, 0x4e, 0x34, 0x5b, 0xc6, 0x86, 0xa7, 0x26, 0x18, 0x2c, 0x99, 0x97, 0x31, 0xc9,
	0x30, 0x89, 0x64, 0xa8, 0x14, 0xdb, 0xd0, 0x46, 0xac, 0xcc, 0xde, 0x17, 0xb4, 0x12, 0xcd, 0x8b,
	0x74, 0x6e, 0xf7, 0x54, 0x5c, 0x43, 0x5d, 0xd3, 0x3a, 0x25, 0x63, 0x11, 0xe1, 0x58, 0x85, 0x2b,
	0xea, 0x97, 0x86, 0xa5, 0xd1, 0xc9, 0xd4, 0x61, 0xec, 0x41, 0x6d, 0x49, 0x6a, 0x41, 0xba, 0x5f,
	0x76, 0xaa, 0x67, 0x62, 0x00, 0x0d, 0x4d, 0x26, 0x61, 0x65, 0x08, 0xdb, 0x50, 0xd1, 0x64, 0x7c,
	0x2c, 0x83, 0x62, 0x08, 0xb0, 0x4e, 0x49, 0x6f, 0x66, 0x26, 0x7a, 0xa7, 0xac, 0x37, 0xfb, 0x3a,
	0x43, 0x75, 0xea, 0xb0, 0xb8, 0x82, 0x53, 0x7f, 0xc7, 0x2c, 0x8e, 0x8c, 0xc5, 0x8b, 0xbc, 0xa3,
	0x32, 0x6a, 0x4e, 0x70, 0x9c, 0x6f, 0x19, 0xe7, 0x3f, 0x71, 0xbd, 0x93, 0x7b, 0xa8, 0xbe, 0x52,
	0x1c, 0x33, 0xde, 0xe6, 0xa0, 0x73, 0x68, 0x75, 0x33, 0x82, 0x3f, 0xd2, 0xa2, 0xfb, 0xf1, 0xfd,
	0xf3, 0x59, 0x3e, 0xc3, 0x96, 0x74, 0x31, 0xb9, 0xcd, 0xc6, 0xed, 0x26, 0x5f, 0x25, 0xa8, 0x3f,
	0xec, 0xcf, 0xc0, 0x27, 0x68, 0x3e, 0xf2, 0x8a, 0x72, 0x7a, 0x5e, 0xb4, 0x14, 0x53, 0x82, 0x5e,
	0xa1, 0x1e, 0x9e, 0x2f, 0xfa, 0xae, 0x1f, 0xb1, 0x2d, 0xbd, 0x6c, 0xe4, 0x36, 0x0b, 0xec, 0xf0,
	0x06, 0x9a, 0xbe, 0xf2, 0x4e, 0xbd, 0xf0, 0x3f, 0xb5, 0xdd, 0x42, 0x3d, 0x30, 0x8b, 0xa3, 0xe7,
	0x9a, 0x7b, 0xa4, 0xcb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x20, 0x20, 0x0c, 0xf0, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloClient is the client API for Hello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloClient interface {
	Hello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type helloClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloClient(cc grpc.ClientConnInterface) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) Hello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/services.hello/hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServer is the server API for Hello service.
type HelloServer interface {
	Hello(context.Context, *Request) (*Response, error)
}

// UnimplementedHelloServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServer struct {
}

func (*UnimplementedHelloServer) Hello(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.hello/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).Hello(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "hello",
			Handler:    _Hello_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "you_service.proto",
}

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	SomeProduct(ctx context.Context, in *QuerySize, opts ...grpc.CallOption) (*ProductList, error)
	ProductInfo(ctx context.Context, in *QuerySize, opts ...grpc.CallOption) (*ProductInfo, error)
}

type productClient struct {
	cc grpc.ClientConnInterface
}

func NewProductClient(cc grpc.ClientConnInterface) ProductClient {
	return &productClient{cc}
}

func (c *productClient) SomeProduct(ctx context.Context, in *QuerySize, opts ...grpc.CallOption) (*ProductList, error) {
	out := new(ProductList)
	err := c.cc.Invoke(ctx, "/services.Product/SomeProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ProductInfo(ctx context.Context, in *QuerySize, opts ...grpc.CallOption) (*ProductInfo, error) {
	out := new(ProductInfo)
	err := c.cc.Invoke(ctx, "/services.Product/ProductInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	SomeProduct(context.Context, *QuerySize) (*ProductList, error)
	ProductInfo(context.Context, *QuerySize) (*ProductInfo, error)
}

// UnimplementedProductServer can be embedded to have forward compatible implementations.
type UnimplementedProductServer struct {
}

func (*UnimplementedProductServer) SomeProduct(ctx context.Context, req *QuerySize) (*ProductList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SomeProduct not implemented")
}
func (*UnimplementedProductServer) ProductInfo(ctx context.Context, req *QuerySize) (*ProductInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductInfo not implemented")
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_SomeProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuerySize)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).SomeProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Product/SomeProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).SomeProduct(ctx, req.(*QuerySize))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_ProductInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuerySize)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).ProductInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.Product/ProductInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).ProductInfo(ctx, req.(*QuerySize))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SomeProduct",
			Handler:    _Product_SomeProduct_Handler,
		},
		{
			MethodName: "ProductInfo",
			Handler:    _Product_ProductInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "you_service.proto",
}
